spring.cloud.stream.kafka.binder.brokers=localhost
spring.cloud.stream.kafka.binder.defaultBrokerPort=9092
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#
# out
spring.cloud.stream.bindings.requestsChannel.producer.header-mode=raw
spring.cloud.stream.bindings.requestsChannel.destination=ingenico-output-requests
spring.cloud.stream.bindings.requestsChannel.producer.requiredGroups=queue
spring.cloud.stream.bindings.requestsChannel.contentType=application/json
#
# paymentEventsChannel out
spring.cloud.stream.bindings.paymentEventsChannel.producer.header-mode=raw
spring.cloud.stream.bindings.paymentEventsChannel.destination=ingenico-output-payment-events
spring.cloud.stream.bindings.paymentEventsChannel.producer.requiredGroups=queue
#
# inputChannel in
spring.cloud.stream.bindings.inputChannel.consumer.header-mode=raw
spring.cloud.stream.bindings.inputChannel.destination=ingenico-input-payment-events
spring.cloud.stream.bindings.inputChannel.group=queue